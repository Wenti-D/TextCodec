<?xml version="1.0" encoding="utf-8"?>
<Page
    x:Class="TextCodec.Views.Pages.CodecPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:TextCodec.Views.Pages"
    xmlns:local_cvt="using:TextCodec.Core.Converters"
    xmlns:ct_cvt="using:CommunityToolkit.WinUI.UI.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d">
    <!--Background="{ThemeResource ApplicationPageBackgroundThemeBrush}"-->

    <Page.Resources>
        <local_cvt:ResourceTranslationConverter x:Name="ResourceTranslationConverter"/>
        <ct_cvt:BoolToVisibilityConverter x:Name="BoolToVisibilityConverter"/>
    </Page.Resources>

    
    <Grid Width="Auto" Height="Auto">
        <Grid.RowDefinitions>
            <RowDefinition Height="1*"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="1*"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition/>
        </Grid.ColumnDefinitions>
        <StackPanel Orientation="Vertical">
            <Button x:Name="ClearRawText"
                    Command="{x:Bind ViewModel.ClearTextCommand}">
                <ToolTipService.ToolTip>
                    <ToolTip x:Uid="CodecPageClearTextButtonInfo"/>
                </ToolTipService.ToolTip>
                <FontIcon Glyph="&#xE711;" />
            </Button>

            <Button x:Name="CopyRawText"
                    Command="{x:Bind ViewModel.CopyRawTextCommand}">
                <ToolTipService.ToolTip>
                    <ToolTip x:Uid="CodecPageCopyTextButtonInfo"/>
                </ToolTipService.ToolTip>
                <FontIcon Glyph="&#xE8C8;" />
            </Button>
            <TeachingTip x:Name="RawTextCopiedTip"
                         x:Uid="CodecPageTextCopiedInfo"
                         IsLightDismissEnabled="True"
                         IsOpen="{x:Bind ViewModel.IsRawTextCopiedTipOpen, Mode=OneWay}"
                         Target="{x:Bind CopyRawText}"
                         FontFamily="{StaticResource SarasaUI}"/>

            <Button x:Name="PasteRawText"
                    Command="{x:Bind ViewModel.PasteRawTextCommand}">
                <ToolTipService.ToolTip>
                    <ToolTip x:Uid="CodecPagePasteTextButtonInfo"/>
                </ToolTipService.ToolTip>
                <FontIcon Glyph="&#xE77F;" />
            </Button>
            <TeachingTip x:Name="RawTextPastedTip"
                         x:Uid="CodecPageTextPastedInfo"
                         IsLightDismissEnabled="True"
                         IsOpen="{x:Bind ViewModel.IsRawTextPastedTipOpen, Mode=OneWay}"
                         Target="{x:Bind PasteRawText}"
                         FontFamily="{StaticResource SarasaUI}"/>
        </StackPanel>
        <TextBox x:Name="RawTextBox"
                 AcceptsReturn="True"
                 Margin="20,0,0,0"
                 TextWrapping="Wrap"
                 IsSpellCheckEnabled="False"
                 Grid.Row="0"
                 Grid.Column="1"
                 GettingFocus="{x:Bind ViewModel.SwitchToEncodeMode}"
                 Text="{x:Bind ViewModel.RawText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                 TextChanged="{x:Bind ViewModel.StartEncodeAsync}">
        </TextBox>

        <Grid Grid.Row="1" 
              Grid.Column="1"
              Padding="20">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="1.5*"/>
            </Grid.ColumnDefinitions>
            <DropDownButton x:Name="EncodeMode"
                            x:Uid="CodecPageModeSelectButton"
                            Content="{x:Bind ViewModel.CurrentCodecModeText, Mode=OneWay}"
                            Margin="40,0,5,5">
                <DropDownButton.Flyout>
                    <MenuFlyout>
                        <MenuFlyoutSubItem Text="Unicode">
                            <MenuFlyoutItem x:Name="UnicodeBin"
                                            Text="Bin"
                                            Command="{x:Bind ViewModel.SelectCodecModeCommand}"
                                            CommandParameter="{Binding ElementName=UnicodeBin}"/>
                            <MenuFlyoutItem x:Name="UnicodeOct"
                                            Text="Oct"
                                            Command="{x:Bind ViewModel.SelectCodecModeCommand}"
                                            CommandParameter="{Binding ElementName=UnicodeOct}"/>
                            <MenuFlyoutItem x:Name="UnicodeDec"
                                            Text="Dec"
                                            Command="{x:Bind ViewModel.SelectCodecModeCommand}"
                                            CommandParameter="{Binding ElementName=UnicodeDec}"/>
                            <MenuFlyoutItem x:Name="UnicodeHex"
                                            Text="Hex"
                                            Command="{x:Bind ViewModel.SelectCodecModeCommand}"
                                            CommandParameter="{Binding ElementName=UnicodeHex}"/>
                        </MenuFlyoutSubItem>
                        <MenuFlyoutSubItem Text="UTF">
                            <MenuFlyoutItem x:Name="UTF8"
                                            Text="UTF-8"
                                            Command="{x:Bind ViewModel.SelectCodecModeCommand}"
                                            CommandParameter="{Binding ElementName=UTF8}"/>
                            <MenuFlyoutItem x:Name="UTF16LE"
                                            x:Uid="CodecPageModeUtf16Le"
                                            Command="{x:Bind ViewModel.SelectCodecModeCommand}"
                                            CommandParameter="{Binding ElementName=UTF16LE}"/>
                            <MenuFlyoutItem x:Name="UTF16BE"
                                            x:Uid="CodecPageModeUtf16Be"
                                            Command="{x:Bind ViewModel.SelectCodecModeCommand}"
                                            CommandParameter="{Binding ElementName=UTF16BE}"/>
                        </MenuFlyoutSubItem>
                        <MenuFlyoutSubItem x:Uid="CodecPageModeBaseSeries">
                            <MenuFlyoutItem x:Name="Base64"
                                            Text="Base64"
                                            Command="{x:Bind ViewModel.SelectCodecModeCommand}"
                                            CommandParameter="{Binding ElementName=Base64}"/>
                            <MenuFlyoutItem x:Name="Base58"
                                            Text="Base58"
                                            Command="{x:Bind ViewModel.SelectCodecModeCommand}"
                                            CommandParameter="{Binding ElementName=Base58}"/>
                            <MenuFlyoutItem x:Name="Base32"
                                            Text="Base32"
                                            Command="{x:Bind ViewModel.SelectCodecModeCommand}"
                                            CommandParameter="{Binding ElementName=Base32}"/>
                        </MenuFlyoutSubItem>
                        <MenuFlyoutItem x:Name="JsonString"
                                        x:Uid="CodecPageModeJsonString"
                                        Command="{x:Bind ViewModel.SelectCodecModeCommand}"
                                        CommandParameter="{Binding ElementName=JsonString}"/>
                        <MenuFlyoutItem x:Name="InternationalMorseCode"
                                        x:Uid="CodecPageModeIntMorseCode"
                                        Command="{x:Bind ViewModel.SelectCodecModeCommand}"
                                        CommandParameter="{Binding ElementName=InternationalMorseCode}"/>
                        <MenuFlyoutItem x:Name="ChineseTelegraphCode"
                                        x:Uid="CodecPageChnTeleCode"
                                        Command="{x:Bind ViewModel.SelectCodecModeCommand}"
                                        CommandParameter="{Binding ElementName=ChineseTelegraphCode}"/>
                        <MenuFlyoutItem x:Name="CaesarCipher"
                                        x:Uid="CodecPageCaesarCipher"
                                        Command="{x:Bind ViewModel.SelectCodecModeCommand}"
                                        CommandParameter="{Binding ElementName=CaesarCipher}"/>
                    </MenuFlyout>
                </DropDownButton.Flyout>
            </DropDownButton>

            <!--UTF编码时出现的「编码时带空格」勾选选项-->
            <CheckBox x:Name="EncodeWithSpace"
                      x:Uid="CodecPageEncodeWithSpaceCheckBox"
                      Grid.Column="1"
                      IsChecked="{x:Bind ViewModel.IsEncodeWithSpaceChecked, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                      Visibility="{x:Bind ViewModel.IsEncodeWithSpaceVisible, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}"
                      Command="{x:Bind ViewModel.StartCodecAsyncCommand}"/>

            <!--Base系列编码时出现的编码方式与序列选项-->
            <StackPanel Orientation="Horizontal"
                        Grid.Column="1">
                <ComboBox x:Name="TextPreprocessMode"
                          Width="150"
                          SelectedValue="{x:Bind ViewModel.SelectedBaseSeriesTextPreprocessMode, Mode=TwoWay}"
                          Visibility="{x:Bind ViewModel.IsTextPreprocessModeVisible, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}"
                          SelectionChanged="{x:Bind ViewModel.StartCodecAsync}">
                    <ComboBox.ItemTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding Converter={StaticResource ResourceTranslationConverter}}"/>
                        </DataTemplate>
                    </ComboBox.ItemTemplate>
                    <x:String>CodecPageModeUtf8</x:String>
                    <x:String>CodecPageModeUtf16Le/Text</x:String>
                    <x:String>CodecPageModeUtf16Be/Text</x:String>
                </ComboBox>
                <ComboBox x:Name="Base58Style"
                          Width="120"
                          SelectedValue="{x:Bind ViewModel.SelectedBase58Style, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                          Visibility="{x:Bind ViewModel.IsBase58StyleVisible, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}"
                          SelectionChanged="{x:Bind ViewModel.StartCodecAsync}">
                    <ComboBox.ItemTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding Converter={StaticResource ResourceTranslationConverter}}"/>
                        </DataTemplate>
                    </ComboBox.ItemTemplate>
                    <x:String>CodecPageBase58StdCharList</x:String>
                    <x:String>CodecPageBase58BtcCharList</x:String>
                </ComboBox>
            </StackPanel>

            <!--中文电码编码时出现的编码样式-->
            <ComboBox x:Name="ChineseTeleCodeStyle"
                      Width="150"
                      Grid.Column="1"
                      SelectedValue="{x:Bind ViewModel.SelectedChineseTelegraphCodeStyle, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                      Visibility="{x:Bind ViewModel.IsChineseTeleCodeStyleVisible, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}"
                      SelectionChanged="{x:Bind ViewModel.StartCodecAsync}">
                <ComboBox.ItemTemplate>
                    <DataTemplate>
                        <TextBlock Text="{Binding Converter={StaticResource ResourceTranslationConverter}}"/>
                    </DataTemplate>
                </ComboBox.ItemTemplate>
                <x:String>ChineseTeleCodeNumber</x:String>
                <x:String>ChineseTeleCodeNumberSimp</x:String>
                <x:String>ChineseTeleCodeNumberFull</x:String>
            </ComboBox>

            <!--凯撒密码偏移量-->
            <StackPanel Orientation="Horizontal"
                        Grid.Column="1">
                <NumberBox x:Name="CaesarCipherShift"
                           x:Uid="CodecPageCaesarCipherShift"
                           Grid.Column="1"
                           Text="{x:Bind ViewModel.CurrentCaesarShiftText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                           Visibility="{x:Bind ViewModel.IsCaesarCipherShiftVisible, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}"
                           MinWidth="150"
                           MaxWidth="300"
                           ValueChanged="{x:Bind ViewModel.CaeserShiftValueChanged}"
                           NumberFormatter="{x:Bind ViewModel.CaesarCipherNumberFormatter}"
                           Minimum="-32768"
                           Maximum="32767"
                           SpinButtonPlacementMode="Compact"
                           SmallChange="1"
                           LargeChange="5"/>
            </StackPanel>
        </Grid>


        <StackPanel Orientation="Vertical" Grid.Row="2">
            <Button x:Name="ClearEncodedText"
                    Command="{x:Bind ViewModel.ClearTextCommand}">
                <ToolTipService.ToolTip>
                    <ToolTip x:Uid="CodecPageClearTextButtonInfo"/>
                </ToolTipService.ToolTip>
                <FontIcon Glyph="&#xE711;" />
            </Button>

            <Button x:Name="CopyEncodedText"
                    Command="{x:Bind ViewModel.CopyEncodedTextCommand}">
                <ToolTipService.ToolTip>
                    <ToolTip x:Uid="CodecPageCopyTextButtonInfo"/>
                </ToolTipService.ToolTip>
                <FontIcon Glyph="&#xE8C8;" />
            </Button>
            <TeachingTip x:Name="EncodedTextCopiedTip"
                         x:Uid="CodecPageTextCopiedInfo"
                         IsLightDismissEnabled="True"
                         IsOpen="{x:Bind ViewModel.IsEncodedTextCopiedTipOpen, Mode=OneWay}"
                         Target="{x:Bind CopyEncodedText}"
                         FontFamily="{StaticResource SarasaUI}"/>

            <Button x:Name="PasteEncodedText"
                    Command="{x:Bind ViewModel.PasteEncodedTextCommand}">
                <ToolTipService.ToolTip>
                    <ToolTip x:Uid="CodecPagePasteTextButtonInfo"/>
                </ToolTipService.ToolTip>
                <FontIcon Glyph="&#xE77F;" />
            </Button>
            <TeachingTip x:Name="EncodedTextPastedTip"
                         x:Uid="CodecPageTextPastedInfo"
                         IsLightDismissEnabled="True"
                         IsOpen="{x:Bind ViewModel.IsEncodedTextPastedTipOpen, Mode=OneWay}"
                         Target="{x:Bind PasteEncodedText}"
                         FontFamily="{StaticResource SarasaUI}"/>
        </StackPanel>
        <TextBox x:Name="EncodedTextBox"
                 AcceptsReturn="True"
                 Margin="20,0,0,0"
                 Style="{ThemeResource MonoTextBoxStyle}"
                 TextWrapping="Wrap"
                 IsSpellCheckEnabled="False"
                 Grid.Row="2"
                 Grid.Column="1"
                 GettingFocus="{x:Bind ViewModel.SwitchToDecodeMode}"
                 Text="{x:Bind ViewModel.EncodedText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                 TextChanged="{x:Bind ViewModel.StartDecodeAsync}"/>
    </Grid>
</Page>
